syntax = "proto3";

package main;

import "google/protobuf/wrappers.proto";

message SilentPush {}

message Localizeable {
    string loc_key = 1;
    repeated string loc_args = 2;
}

enum PeerType {
  Private = 0;
  Group = 1;
  SIP = 2;
}

message Peer {
  PeerType type = 1;
  int32 id = 2;
  string str_id = 3;
}

message OutPeer {
  PeerType type = 1;
  int32 id = 2;
  int64 accessHash = 3;
  string str_id = 4;
}

message AlertingPush {
    oneof alert_body {
        Localizeable loc_alert_body = 1;
        string simple_alert_body = 2;
    }
    oneof alert_title {
        Localizeable loc_alert_title = 3;
        string simple_alert_title = 4;
    }
    int32 badge = 6;
    Peer peer = 7;
    google.protobuf.StringValue mid = 8;
}

message VoipPush {
    int64 call_id = 1;
    int32 attempt_index = 2;
    string display_name = 3;
    string event_bus_id = 4;
    Peer peer = 5;
    string update_type = 6;
    string disposal_reason = 7;
    OutPeer outPeer = 8;
    bool video = 9;
}

message EncryptedPush {
  AlertingPush public_alerting_push = 1;
  bytes encrypted_data = 2;
  int64 nonce = 3;
}

message PushBody {
    string collapse_key = 1;
    int32 time_to_live = 2;
    int32 seq = 3;
    oneof body {
        SilentPush silent_push = 4;
        AlertingPush alerting_push = 5;
        VoipPush voip_push = 6;
        EncryptedPush encrypted_push = 7;
    }
}

message DeviceIdList {
    repeated string device_ids = 1;
}

message Push {
    map<string, DeviceIdList> destinations = 1;
    PushBody body = 2;
    string correlation_id = 3;
}

message Response {
    map<string, DeviceIdList> project_invalidations = 1;
}

message PingRequest {}
message PongResponse {}

service Pushing {
    rpc Ping(PingRequest) returns (PongResponse) {}
    rpc PushStream(stream Push) returns (stream Response) {}
    rpc SinglePush(Push) returns (Response) {}
}
